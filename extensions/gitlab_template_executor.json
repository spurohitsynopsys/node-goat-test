{
    "adapters": [
        {
            "name": "Gitlab Template Executor",
            "type": "json",
            "stage": "gitlab-template-executor",
            "config": {
                "command": [
                    "gitlab-template-executor"
                ],
                "in": [
                    "blackduck.install.directory",
                    "blackduck.url",
                    "blackduck.token",
                    "blackduck.scan.full",
                    "blackduck.scan.failure.severities",
                    "blackduck.automation.prcomment",
                    "blackduck.automation.fixpr",
                    "blackduck.fixpr.enabled",
                    "blackduck.fixpr.maxCount",
                    "blackduck.fixpr.createSinglePR",
                    "blackduck.fixpr.useUpgradeGuidance",
                    "blackduck.fixpr.filter.severities",
                    "coverity.connect.url",
                    "coverity.connect.user.name",
                    "coverity.connect.user.password",
                    "coverity.connect.project.name",
                    "coverity.connect.stream.name",
                    "coverity.connect.policy.view",
                    "coverity.install.directory",
                    "polaris.serverUrl",
                    "polaris.accessToken",
                    "polaris.application.name",
                    "polaris.project.name",
                    "polaris.branch.name",
                    "polaris.assessment.types",
                    "coverity.automation.prcomment",
                    "gitlab.user.token",
                    "environment.scan.pull",
                    "bridge.log.*"
                ],
                "out": [
                  "gitlab.repository.name",
                  "gitlab.repository.branch.name",
                  "gitlab.api.url",
                  "gitlab.repository.pull.number"
                ]
            }
        }
    ],
    "schema": {
        "blackduck.install.directory": {
            "description": "User supplied install directory for Blackduck",
            "type": "string"
        },
        "blackduck.url": {
            "description": "URL of Blackduck Hub server",
            "type": "string"
        },
        "blackduck.token": {
            "description": "Token for authenticating with blackduck service",
            "isSensitive": true,
            "type": "string"
        },
        "blackduck.scan.full": {
            "description": "If true, intelligent scan. Else if false, rapid scan. Else default based on current situation",
            "type": "bool"
        },
        "blackduck.scan.failure.severities": {
            "description": "Blackduck on fail severities",
            "type": "[]string"
        },
        "blackduck.automation.fixpr": {
            "description": "Flag to enable/disable the automatic fix PRs creations",
            "type": "bool"
        },
        "blackduck.fixpr.enabled": {
            "description": "Flag to enable/disable the fix PRs creations",
            "type": "bool"
        },
        "blackduck.fixpr.filter.severities": {
            "description": "Filter the vulnerabilities by given severities",
            "type": "[]string"
        },
        "blackduck.fixpr.createSinglePR": {
            "description": "Flag to create a single pull request for all the issues",
            "type": "bool"
        },
        "blackduck.fixpr.maxCount": {
            "description": "The maximum number of issues to create the pull request",
            "type": "int"
        },
        "blackduck.fixpr.useUpgradeGuidance": {
            "description": "Configure which upgrade guidance to use",
            "type": "[]string"
        },
        "coverity.connect.url": {
            "description": "The base url to use in API calls to the Coverity Connect Server.",
            "type": "string"
        },
        "coverity.install.directory": {
            "description": "If given, this is where we will look to see if coverity is installed.",
            "type": "string"
        },
        "coverity.connect.user.name": {
            "description": "Coverity connect adapter username",
            "type": "string"
        },
        "coverity.connect.user.password": {
            "description": "Coverity connect adapter password",
            "isSensitive": true,
            "type": "string"
        },
        "coverity.connect.policy.view": {
            "description": "Coverity connect view to validate the issues",
            "type": "string"
        },
        "coverity.connect.project.name": {
            "description": "Coverity connect project name",
            "type": "string"
        },
        "coverity.connect.stream.name": {
            "description": "Name of the stream",
            "type": "string"
        },
        "polaris.serverUrl": {
            "description": "Server url of Polaris service",
            "type": "string"
        },
        "polaris.accessToken": {
            "description": "Access token required for Polaris server authentication",
            "isSensitive": true,
            "type": "string"
        },
        "polaris.application.name": {
            "description": "Application name created in Polaris server",
            "type": "string"
        },
        "polaris.project.name": {
            "description": "Project name created in Polaris server",
            "type": "string"
        },
        "polaris.branch.name": {
            "description": "Branch name for the project created in Polaris server",
            "type": "string"
        },
        "polaris.assessment.types": {
            "description": "Assessment types for which user wants to run tests for.",
            "type": "[]string"
        },
        "coverity.automation.prcomment": {
            "description": "Flag to enable/disable the automatic provide pull request comments",
            "type": "bool"
        },
        "blackduck.automation.prcomment": {
            "description": "Flag to enable/disable the automatic provide pull request comments",
            "type": "bool"
        },
        "gitlab.user.token": {
            "description": "Access token for Gitlab API authentication",
            "type": "string",
            "isSensitive": true
        },
        "gitlab.api.url": {
            "description": "API URL for Gitlab",
            "type": "string"
        },
        "gitlab.repository.name": {
            "description": "Name of the Gitlab repository",
            "type": "string"
        },
        "gitlab.repository.branch.name": {
            "description": "Branch name for the GitLab repository",
            "type": "string"
        },
        "gitlab.repository.pull.number": {
            "description": "The Gitlab pull request number of the current run",
            "type": "int"
        }
    }
}
